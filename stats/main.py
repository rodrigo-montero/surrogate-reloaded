import copy
from typing import List

import numpy as np

from stats.effect_size import cohend, vargha_delaney
from stats.power_analysis import parametric_power, parametric_power_analysis
from stats.wilcoxon import fisher_exact, mannwhitney_test, wilcoxon_test


def statistical_tests(
    a: List, b: List, alpha: float = 0.05, power=0.80, probabilities: bool = False, num_runs: int = None, paired: bool = False
) -> None:
    if probabilities:
        binary_a = []
        binary_b = []
        if num_runs is not None and num_runs > 0:
            for i in range(len(a)):
                num_ones_a = int(a[i] * num_runs)
                num_ones_b = int(b[i] * num_runs)
                binary_a.extend(np.ones(shape=(num_ones_a,)))
                binary_a.extend(np.zeros(shape=(num_runs - num_ones_a,)))
                binary_b.extend(np.ones(shape=(num_ones_b,)))
                binary_b.extend(np.zeros(shape=(num_runs - num_ones_b,)))
        assert len(binary_a) == len(a) * num_runs, "Length binary vector_a must be = {} * {}. Found: {}".format(
            len(a), num_runs, len(binary_a)
        )
        assert len(binary_b) == len(b) * num_runs, "Length binary vector_b must be = {} * {}. Found: {}".format(
            len(b), num_runs, len(binary_b)
        )
        contingency_table = np.zeros(shape=(2, 2))
        print(sum(binary_a) / len(binary_a))
        print(sum(binary_b) / len(binary_b))
        contingency_table[0][0] = sum(binary_a)
        contingency_table[0][1] = sum(binary_b)
        contingency_table[1][0] = contingency_table[0][0] - 1
        contingency_table[1][1] = contingency_table[0][1] - 1
        odds_ratio, p_value = fisher_exact(contingency_table=contingency_table)
        print("p-value: {}".format(p_value))
        a = copy.deepcopy(binary_a)
        b = copy.deepcopy(binary_b)
        print("odds ratio: {}".format(odds_ratio))
    else:
        if not paired:
            _, p_value = mannwhitney_test(a=a, b=b)
        else:
            _, p_value = wilcoxon_test(a=a, b=b)

        print("p-value: {}".format(p_value))
        estimate, magnitude = vargha_delaney(a=a, b=b)
        print("effect size - Estimate: {}, Magnitude: {}".format(estimate, magnitude))
        estimate, magnitude = cohend(a=a, b=b)
        print("parametric power estimate: {}".format(parametric_power(effect=estimate, nobs=len(a), alpha=0.05)))
        if p_value > alpha:
            print("cohen's d effect size: {}, {}".format(estimate, magnitude))
            sample_size = parametric_power_analysis(effect=estimate, alpha=alpha, power=power)
            print("sample size required for alpha {} and power {}: {}".format(alpha, power, sample_size))


def summary(a: List, report_sum: bool = False) -> None:
    if not report_sum:
        print(
            "Summary. Mean: {:.2f}, Median: {:.2f}, Std: {:.2f}, Min: {}, Max: {}".format(
                np.mean(a), np.median(a), np.std(a), np.min(a), np.max(a)
            )
        )
    else:
        print(
            "Summary. Mean: {:.2f}, Median: {:.2f}, Std: {:.2f}, Min: {}, Max: {}, Sum: {}".format(
                np.mean(a), np.median(a), np.std(a), np.min(a), np.max(a), sum(a)
            )
        )


def comparison(
    quantities_compared: str,
    method_1: List[float],
    method_2: List[float],
    name_method_1: str,
    name_method_2: str,
    probabilities: bool = False,
    num_runs: int = None,
    paired: bool = False,
) -> None:
    print("=========== {} vs {} ===========".format(name_method_1.upper(), name_method_2.upper()))
    print(quantities_compared)
    summary(a=method_1)
    summary(a=method_2)
    statistical_tests(a=method_1, b=method_2, probabilities=probabilities, num_runs=num_runs, paired=paired)
    print("*****************************************")


# TODO: to automate
if __name__ == "__main__":
    episodes_first_failure_random = [
        7.0,
        28.0,
        100.0,
        68.0,
        51.0,
        54.0,
        26.0,
        8.0,
        100.0,
        73.0,
        100.0,
        29.0,
        94.0,
        100.0,
        18.0,
        25.0,
        100.0,
        24.0,
        29.0,
        78.0,
    ]
    episodes_first_failure_mlp_1_30_pop_size_50 = [
        46.0,
        10.0,
        6.0,
        71.0,
        2.0,
        56.0,
        38.0,
        88.0,
        99.0,
        13.0,
        19.0,
        22.0,
        11.0,
        17.0,
        43.0,
        80.0,
        24.0,
        12.0,
        48.0,
        81.0,
    ]
    # pop_size impact
    episodes_first_failure_mlp_1_vae_50_pop_size_50 = [
        42.0,
        32.0,
        27.0,
        31.0,
        3.0,
        19.0,
        54.0,
        35.0,
        24.0,
        67.0,
        32.0,
        26.0,
        32.0,
        17.0,
        15.0,
        9.0,
        17.0,
        60.0,
        41.0,
        26.0,
    ]
    episodes_first_failure_mlp_1_vae_50_pop_size_1000 = [
        1.0,
        73.0,
        4.0,
        9.0,
        23.0,
        11.0,
        11.0,
        3.0,
        19.0,
        9.0,
        4.0,
        24.0,
        42.0,
        16.0,
        84.0,
        88.0,
        8.0,
        20.0,
        9.0,
        7.0,
    ]
    # oversampling impact
    episodes_first_failure_mlp_1_vae_50_pop_size_50_oversample_0_3 = [
        35.0,
        11.0,
        10.0,
        6.0,
        43.0,
        38.0,
        65.0,
        16.0,
        13.0,
        34.0,
        71.0,
        14.0,
        100.0,
        26.0,
        24.0,
        2.0,
        7.0,
        2.0,
        31.0,
        49.0,
    ]
    # target filter impact
    episodes_first_failure_mlp_1_vae_30_pop_size_50 = [
        31.0,
        4.0,
        11.0,
        28.0,
        71.0,
        43.0,
        17.0,
        13.0,
        25.0,
        100.0,
        24.0,
        40.0,
        17.0,
        41.0,
        1.0,
        76.0,
        15.0,
        1.0,
        9.0,
        16.0,
    ]
    episodes_first_failure_mlp_1_vae_10_pop_size_50 = [
        35.0,
        48.0,
        15.0,
        48.0,
        6.0,
        3.0,
        15.0,
        55.0,
        12.0,
        29.0,
        9.0,
        42.0,
        16.0,
        53.0,
        21.0,
        7.0,
        35.0,
        44.0,
        75.0,
        25.0,
    ]
    episodes_first_failure_mlp_1_50_sampling_size_100_optimized = [
        7.0,
        52.0,
        13.0,
        9.0,
        4.0,
        18.0,
        1.0,
        16.0,
        17.0,
        24.0,
        3.0,
        35.0,
        13.0,
        75.0,
        28.0,
        3.0,
        2.0,
        30.0,
        6.0,
        10.0,
    ]
    # optimized dnn_sampling_size impact (take first 10 tracks if prob > 0.7 out of the generation SAMPLING_SIZE tracks)
    episodes_first_failure_mlp_1_vae_50_sampling_size_100_optimized = [
        15.0,
        6.0,
        29.0,
        1.0,
        26.0,
        17.0,
        1.0,
        1.0,
        2.0,
        37.0,
        26.0,
        33.0,
        8.0,
        55.0,
        37.0,
        25.0,
        1.0,
        13.0,
        40.0,
        33.0,
    ]
    episodes_first_failure_mlp_1_30_sampling_size_100_optimized = [
        26.0,
        31.0,
        12.0,
        10.0,
        6.0,
        11.0,
        2.0,
        11.0,
        11.0,
        80.0,
        4.0,
        1.0,
        17.0,
        14.0,
        8.0,
        100.0,
        15.0,
        50.0,
        71.0,
        13.0,
    ]
    episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized = [
        2.0,
        2.0,
        11.0,
        15.0,
        42.0,
        35.0,
        9.0,
        4.0,
        14.0,
        29.0,
        3.0,
        5.0,
        3.0,
        22.0,
        8.0,
        15.0,
        66.0,
        33.0,
        25.0,
        11.0,
    ]
    episodes_first_failure_mlp_1_30_sampling_size_1000_optimized = [
        17.0,
        10.0,
        23.0,
        1.0,
        1.0,
        67.0,
        7.0,
        40.0,
        59.0,
        51.0,
        2.0,
        50.0,
        13.0,
        4.0,
        9.0,
        20.0,
        2.0,
        49.0,
        39.0,
        1.0,
    ]
    episodes_first_failure_mlp_1_vae_50_hill_climbing = [
        46.0,
        100.0,
        55.0,
        19.0,
        11.0,
        29.0,
        17.0,
        10.0,
        100.0,
        37.0,
        8.0,
        11.0,
        8.0,
        11.0,
        30.0,
        37.0,
        9.0,
        36.0,
        41.0,
        4.0,
    ]
    episodes_first_failure_mlp_1_30_hill_climbing = [
        4.0,
        84.0,
        39.0,
        59.0,
        40.0,
        11.0,
        6.0,
        14.0,
        4.0,
        19.0,
        47.0,
        100.0,
        3.0,
        53.0,
        22.0,
        5.0,
        90.0,
        77.0,
        60.0,
        100.0,
    ]

    # prioritized replay
    episodes_first_failure_prioritized_replay_50 = [
        5.0,
        10.0,
        11.0,
        19.0,
        19.0,
        1.0,
        6.0,
        15.0,
        45.0,
        4.0,
        23.0,
        8.0,
        3.0,
        17.0,
        1.0,
        27.0,
        21.0,
        8.0,
        20.0,
        9.0,
    ]
    episodes_first_failure_prioritized_replay_30 = [
        23.0,
        4.0,
        10.0,
        3.0,
        16.0,
        20.0,
        17.0,
        38.0,
        27.0,
        37.0,
        2.0,
        28.0,
        2.0,
        7.0,
        9.0,
        1.0,
        18.0,
        3.0,
        7.0,
        8.0,
    ]

    # local search
    episodes_first_failure_local_search_segments_vae_50_replay = [
        20.0,
        2.0,
        27.0,
        18.0,
        91.0,
        22.0,
        24.0,
        24.0,
        16.0,
        69.0,
        39.0,
        18.0,
        51.0,
        66.0,
        100.0,
        18.0,
        8.0,
        11.0,
        74.0,
        31.0,
    ]
    episodes_first_failure_local_search_segments_vae_50_mutation_crossover = [
        3.0,
        24.0,
        4.0,
        12.0,
        11.0,
        18.0,
        10.0,
        14.0,
        54.0,
        9.0,
        24.0,
        4.0,
        7.0,
        19.0,
        10.0,
        20.0,
        11.0,
        1.0,
        2.0,
        5.0,
    ]
    episodes_first_failure_local_search_whole_vae_50_replay = [
        16.0,
        6.0,
        12.0,
        35.0,
        4.0,
        31.0,
        10.0,
        5.0,
        3.0,
        37.0,
        22.0,
        10.0,
        4.0,
        59.0,
        14.0,
        27.0,
        17.0,
        42.0,
        14.0,
        25.0,
    ]
    episodes_first_failure_local_search_whole_vae_50_mutation_crossover = [
        41.0,
        23.0,
        2.0,
        4.0,
        42.0,
        5.0,
        27.0,
        19.0,
        59.0,
        10.0,
        21.0,
        2.0,
        14.0,
        33.0,
        32.0,
        11.0,
        12.0,
        1.0,
        62.0,
        16.0,
    ]

    times_elapsed_random = [
        41.33650612831116,
        151.8641059398651,
        569.720330953598,
        391.6398341655731,
        314.78865790367126,
        305.24301195144653,
        151.99416589736938,
        38.48859429359436,
        601.8468811511993,
        429.42826080322266,
        589.4865579605103,
        166.87411308288574,
        546.9549009799957,
        551.3450717926025,
        100.75522303581238,
        142.93937587738037,
        609.7717599868774,
        145.9299566745758,
        172.23162603378296,
        460.7489011287689,
    ]
    times_elapsed_prioritized_replay_50 = [
        25.740066051483154,
        49.900445222854614,
        56.254854917526245,
        101.18184685707092,
        115.03779602050781,
        4.106137990951538,
        30.390766859054565,
        73.7339870929718,
        271.1378598213196,
        19.845970153808594,
        135.43676781654358,
        40.02104067802429,
        11.901893138885498,
        104.65171504020691,
        4.6900999546051025,
        139.40106534957886,
        118.08465003967285,
        36.78330397605896,
        125.12492489814758,
        48.39668297767639,
    ]
    times_elapsed_prioritized_replay_30 = [
        127.90669798851013,
        22.89800500869751,
        54.80541682243347,
        17.55425786972046,
        90.9287497997284,
        112.06868600845337,
        95.04288411140442,
        209.4000120162964,
        151.46370100975037,
        188.68958592414856,
        16.055396795272827,
        155.51272201538086,
        11.01063323020935,
        34.53154516220093,
        46.99468517303467,
        4.806746006011963,
        90.47869277000427,
        15.998441934585571,
        49.73119807243347,
        46.182350873947144,
    ]
    times_elapsed_mlp_1_30_sampling_size_20 = [
        708.438013792038,
        180.25388383865356,
        94.72748494148254,
        1190.8194057941437,
        34.64208698272705,
        977.4748032093048,
        713.3979668617249,
        1667.5023562908173,
        1806.1233530044556,
        255.50197887420654,
        349.1866292953491,
        406.56425189971924,
        213.3279459476471,
        357.7824339866638,
        865.1033961772919,
        1670.6261870861053,
        512.2510280609131,
        257.6585593223572,
        902.5715019702911,
        1423.9448099136353,
    ]
    times_elapsed_mlp_1_30_sampling_size_100_optimized = [
        777.9193937778473,
        991.4250538349152,
        534.7570481300354,
        278.75109601020813,
        258.4140079021454,
        333.9275710582733,
        105.70439100265503,
        268.56618905067444,
        340.04344296455383,
        2671.5625491142273,
        202.80619287490845,
        63.89093899726868,
        597.8516671657562,
        431.86246705055237,
        279.69168305397034,
        2808.1167578697205,
        712.3303339481354,
        1681.7523930072784,
        2706.876734018326,
        342.2259261608124,
    ]
    times_elapsed_mlp_1_50_sampling_size_100_optimized = [
        232.96793508529663,
        1643.2685661315918,
        609.2826690673828,
        390.90640926361084,
        192.44957399368286,
        715.3897438049316,
        61.97520589828491,
        491.4831910133362,
        751.1525449752808,
        1250.8350961208344,
        78.05826926231384,
        1332.358696937561,
        738.0004148483276,
        2898.185553789139,
        984.3109080791473,
        136.81718397140503,
        137.3637728691101,
        1380.414587020874,
        219.74516010284424,
        479.9746172428131,
    ]
    times_elapsed_mlp_1_vae_50_sampling_size_20 = [
        741.5809180736542,
        624.749826669693,
        549.9096579551697,
        604.466607093811,
        57.60471177101135,
        387.4922568798065,
        1051.7638731002808,
        714.5628836154938,
        460.81546688079834,
        1259.330484867096,
        591.4896199703217,
        449.3503842353821,
        535.1619231700897,
        287.9521908760071,
        253.88367700576782,
        166.8925657272339,
        296.8493318557739,
        1075.4928209781647,
        690.709018945694,
        432.67698192596436,
    ]
    times_elapsed_mlp_1_vae_50_sampling_size_100_optimized = [
        556.6336801052094,
        388.202898979187,
        821.5739030838013,
        7.804480075836182,
        938.9687287807465,
        630.5774829387665,
        3.853214979171753,
        61.13069987297058,
        12.227210998535156,
        1396.7366168498993,
        967.8231930732727,
        1148.1226007938385,
        255.95124912261963,
        2121.4301660060883,
        1122.971909046173,
        896.0636849403381,
        3.669179916381836,
        375.64165925979614,
        1390.6883299350739,
        1149.0309700965881,
    ]
    times_elapsed_mlp_1_vae_50_sampling_size_1000_optimized = [
        573.3624238967896,
        584.1999561786652,
        606.640656709671,
        597.4071390628815,
        1799.787400007248,
        1817.340096950531,
        602.8005499839783,
        589.7129180431366,
        690.0746200084686,
        1351.6963341236115,
        619.1685268878937,
        650.5771820545197,
        612.4734768867493,
        1278.0417091846466,
        590.8922398090363,
        636.5874109268188,
        2133.301789999008,
        1901.7890429496765,
        1239.2959859371185,
        585.5868949890137,
    ]
    times_elapsed_mlp_1_30_sampling_size_1000_optimized = [
        1026.1638014316559,
        1018.2137413024902,
        1996.973200559616,
        880.9649677276611,
        891.4043946266174,
        4314.283674955368,
        996.5916402339935,
        2271.2465023994446,
        3200.990027666092,
        3176.581486225128,
        888.6051692962646,
        3161.4908816814423,
        1034.279839515686,
        940.6546337604523,
        974.4876019954681,
        1992.0962510108948,
        911.8792564868927,
        3153.401274204254,
        2231.3397419452667,
        895.7357625961304,
    ]
    # times_elapsed_mlp_1_vae_50_hill_climbing = []
    times_elapsed_mlp_1_30_hill_climbing = [
        56.76608920097351,
        1503.821110010147,
        896.2033598423004,
        968.120265007019,
        702.9881331920624,
        203.30518674850464,
        115.79463410377502,
        230.09895706176758,
        66.93792200088501,
        301.3416199684143,
        1152.3198688030243,
        1519.0795269012451,
        44.82344388961792,
        933.9014818668365,
        334.44064807891846,
        64.22632694244385,
        1530.2425260543823,
        1688.0588898658752,
        1183.4179949760437,
        1719.3740179538727,
    ]

    print("=========== Times elapsed ===========")
    print("******* Random ******* ")
    summary(a=times_elapsed_random, report_sum=True)
    print("******* Prioritized Replay 30 ******* ")
    summary(a=times_elapsed_prioritized_replay_30, report_sum=True)
    print("******* Prioritized Replay 50 ******* ")
    summary(a=times_elapsed_prioritized_replay_50, report_sum=True)
    print("******* MLP_1_30_SAMPLING_SIZE_20 *******")
    summary(a=times_elapsed_mlp_1_30_sampling_size_20, report_sum=True)
    print("******* MLP_1_30_SAMPLING_SIZE_100_OPTIMIZED *******")
    summary(a=times_elapsed_mlp_1_30_sampling_size_100_optimized, report_sum=True)
    print("******* MLP_1_50_SAMPLING_SIZE_100_OPTIMIZED *******")
    summary(a=times_elapsed_mlp_1_50_sampling_size_100_optimized, report_sum=True)
    print("******* MLP_1_50_VAE_SAMPLING_SIZE_20 *******")
    summary(a=times_elapsed_mlp_1_vae_50_sampling_size_20, report_sum=True)
    print("******* MLP_1_50_VAE_SAMPLING_SIZE_100_OPTIMIZED_SAMPLING *******")
    summary(a=times_elapsed_mlp_1_vae_50_sampling_size_100_optimized, report_sum=True)
    print("******* MLP_1_50_VAE_SAMPLING_SIZE_1000_OPTIMIZED_SAMPLING *******")
    summary(a=times_elapsed_mlp_1_vae_50_sampling_size_1000_optimized, report_sum=True)
    print()

    print("=========== Random vs MLP_1 30 POP SIZE 50 ===========")
    summary(a=episodes_first_failure_random)
    summary(a=episodes_first_failure_mlp_1_30_pop_size_50)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_random, b=episodes_first_failure_mlp_1_30_pop_size_50)
    print("*****************************************")

    print("=========== Random vs MLP_1 VAE 50 POP SIZE 50 ===========")
    summary(a=episodes_first_failure_random)
    summary(a=episodes_first_failure_mlp_1_vae_50_pop_size_50)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_random, b=episodes_first_failure_mlp_1_vae_50_pop_size_50)
    print("*****************************************")

    print("=========== MLP_1 30 POP SIZE 50 vs MLP_1 VAE 50 POP SIZE 50 ===========")
    summary(a=episodes_first_failure_mlp_1_30_pop_size_50)
    summary(a=episodes_first_failure_mlp_1_vae_50_pop_size_50)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_mlp_1_30_pop_size_50, b=episodes_first_failure_mlp_1_vae_50_pop_size_50)
    print("*****************************************")

    print("^^^^^^^^^^^^^^^^^^^^^^ IMPACT OVERSAMPLING ^^^^^^^^^^^^^^^^^^^^^^")
    print("=========== Random vs MLP_1 VAE 50 POP SIZE 50 OVERSAMPLE 0.3 ===========")
    summary(a=episodes_first_failure_random)
    summary(a=episodes_first_failure_mlp_1_vae_50_pop_size_50_oversample_0_3)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_random, b=episodes_first_failure_mlp_1_vae_50_pop_size_50_oversample_0_3)
    print("*****************************************")

    print("=========== MLP_1 VAE 50 POP SIZE 50 NO OVERSAMPLE vs MLP_1 VAE 50 POP SIZE 50 OVERSAMPLE 0.3 ===========")
    summary(a=episodes_first_failure_mlp_1_vae_50_pop_size_50)
    summary(a=episodes_first_failure_mlp_1_vae_50_pop_size_50_oversample_0_3)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_mlp_1_vae_50_pop_size_50, b=episodes_first_failure_mlp_1_vae_50_pop_size_50_oversample_0_3
    )
    print("*****************************************")

    print("^^^^^^^^^^^^^^^^^^^^^^ IMPACT PROGRESS FILTER ^^^^^^^^^^^^^^^^^^^^^^")
    print("=========== Random vs MLP_1 VAE 30 POP SIZE 50 ===========")
    summary(a=episodes_first_failure_random)
    summary(a=episodes_first_failure_mlp_1_vae_30_pop_size_50)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_random, b=episodes_first_failure_mlp_1_vae_30_pop_size_50)
    print("*****************************************")

    print("=========== MLP_1 VAE 50 POP SIZE 50 vs MLP_1 VAE 30 POP SIZE 50 ===========")
    summary(a=episodes_first_failure_mlp_1_vae_50_pop_size_50)
    summary(a=episodes_first_failure_mlp_1_vae_30_pop_size_50)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_mlp_1_vae_50_pop_size_50, b=episodes_first_failure_mlp_1_vae_30_pop_size_50)
    print("*****************************************")

    print("=========== Random vs MLP_1 VAE 10 POP SIZE 50 ===========")
    summary(a=episodes_first_failure_random)
    summary(a=episodes_first_failure_mlp_1_vae_10_pop_size_50)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_random, b=episodes_first_failure_mlp_1_vae_10_pop_size_50)
    print("*****************************************")

    print("=========== MLP_1 VAE 50 POP SIZE 50 vs MLP_1 VAE 10 POP SIZE 50 ===========")
    summary(a=episodes_first_failure_mlp_1_vae_50_pop_size_50)
    summary(a=episodes_first_failure_mlp_1_vae_10_pop_size_50)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_mlp_1_vae_50_pop_size_50, b=episodes_first_failure_mlp_1_vae_10_pop_size_50)
    print("*****************************************")

    print("^^^^^^^^^^^^^^^^^^^^^^ IMPACT SAMPLING SIZE ^^^^^^^^^^^^^^^^^^^^^^")
    print("=========== Random vs MLP_1 VAE 50 SAMPLING SIZE 100 OPTIMIZED ===========")
    summary(a=episodes_first_failure_random)
    summary(a=episodes_first_failure_mlp_1_vae_50_sampling_size_100_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_random, b=episodes_first_failure_mlp_1_vae_50_sampling_size_100_optimized)
    print("*****************************************")

    print("=========== MLP_1 VAE 50 SAMPLING SIZE 20 vs MLP_1 VAE 50 SAMPLING SIZE 100 OPTIMIZED ===========")
    summary(a=episodes_first_failure_mlp_1_vae_50_pop_size_50)
    summary(a=episodes_first_failure_mlp_1_vae_50_sampling_size_100_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_mlp_1_vae_50_pop_size_50, b=episodes_first_failure_mlp_1_vae_50_sampling_size_100_optimized
    )
    print("*****************************************")

    print("=========== Random vs MLP_1 VAE 50 SAMPLING SIZE 1000 OPTIMIZED ===========")
    summary(a=episodes_first_failure_random)
    summary(a=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_random, b=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized)
    print("*****************************************")

    print("=========== MLP_1 VAE 50 SAMPLING SIZE 20 vs MLP_1 VAE 50 SAMPLING SIZE 1000 OPTIMIZED ===========")
    summary(a=episodes_first_failure_mlp_1_vae_50_pop_size_50)
    summary(a=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_mlp_1_vae_50_pop_size_50, b=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized
    )
    print("*****************************************")

    print("=========== Random vs MLP_1 30 SAMPLING SIZE 100 OPTIMIZED ===========")
    summary(a=episodes_first_failure_random)
    summary(a=episodes_first_failure_mlp_1_30_sampling_size_100_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_random, b=episodes_first_failure_mlp_1_30_sampling_size_100_optimized)
    print("*****************************************")

    print("=========== MLP_1 30 SAMPLING SIZE 20 vs MLP_1 30 SAMPLING SIZE 100 OPTIMIZED ===========")
    summary(a=episodes_first_failure_mlp_1_30_pop_size_50)
    summary(a=episodes_first_failure_mlp_1_30_sampling_size_100_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_mlp_1_30_pop_size_50, b=episodes_first_failure_mlp_1_30_sampling_size_100_optimized
    )
    print("*****************************************")

    print("=========== MLP_1 30 SAMPLING SIZE 20 vs MLP_1 30 SAMPLING SIZE 1000 OPTIMIZED ===========")
    summary(a=episodes_first_failure_mlp_1_30_pop_size_50)
    summary(a=episodes_first_failure_mlp_1_30_sampling_size_1000_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_mlp_1_30_pop_size_50, b=episodes_first_failure_mlp_1_30_sampling_size_1000_optimized
    )
    print("*****************************************")

    print("=========== MLP_1 VAE 50 SAMPLING SIZE 100 OPTIMIZED vs MLP_1 30 SAMPLING SIZE 100 OPTIMIZED ===========")
    summary(a=episodes_first_failure_mlp_1_vae_50_sampling_size_100_optimized)
    summary(a=episodes_first_failure_mlp_1_30_sampling_size_100_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_mlp_1_vae_50_sampling_size_100_optimized,
        b=episodes_first_failure_mlp_1_30_sampling_size_100_optimized,
    )
    print("*****************************************")

    print("=========== MLP_1 VAE 50 SAMPLING SIZE 1000 OPTIMIZED vs MLP_1 30 SAMPLING SIZE 1000 OPTIMIZED ===========")
    summary(a=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized)
    summary(a=episodes_first_failure_mlp_1_30_sampling_size_1000_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized,
        b=episodes_first_failure_mlp_1_30_sampling_size_1000_optimized,
    )
    print("*****************************************")

    print("^^^^^^^^^^^^^^^^^^^^^^ COMPARISON WITH PRIORITIZED REPLAY ^^^^^^^^^^^^^^^^^^^^^^")
    print("=========== PR 30 vs MLP_1 50 VAE SAMPLING SIZE 1000 OPTIMIZED ===========")
    summary(a=episodes_first_failure_prioritized_replay_30)
    summary(a=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_prioritized_replay_30, b=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized
    )
    print("*****************************************")

    print("=========== PR 50 vs MLP_1 50 VAE SAMPLING SIZE 1000 OPTIMIZED ===========")
    summary(a=episodes_first_failure_prioritized_replay_50)
    summary(a=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_prioritized_replay_50, b=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized
    )
    print("*****************************************")

    print("=========== PR 50 vs PR 30 ===========")
    summary(a=episodes_first_failure_prioritized_replay_50)
    summary(a=episodes_first_failure_prioritized_replay_30)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_prioritized_replay_50, b=episodes_first_failure_prioritized_replay_30)
    print("*****************************************")

    print("=========== PR 30 vs MLP_1 30 SAMPLING SIZE 1000 OPTIMIZED ===========")
    summary(a=episodes_first_failure_prioritized_replay_30)
    summary(a=episodes_first_failure_mlp_1_30_sampling_size_1000_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_prioritized_replay_30, b=episodes_first_failure_mlp_1_30_sampling_size_1000_optimized
    )
    print("*****************************************")

    print("^^^^^^^^^^^^^^^^^^^^^^ COMPARISON WITH LOCAL SEARCH ^^^^^^^^^^^^^^^^^^^^^^")
    print("=========== RANDOM vs LOCAL SEARCH SEGMENTS 50 REPLAY ===========")
    summary(a=episodes_first_failure_random)
    summary(a=episodes_first_failure_local_search_segments_vae_50_replay)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_random, b=episodes_first_failure_local_search_segments_vae_50_replay)
    print("*****************************************")

    print("=========== RANDOM vs LOCAL SEARCH SEGMENTS 50 MUTATION CROSSOVER ===========")
    summary(a=episodes_first_failure_random)
    summary(a=episodes_first_failure_local_search_segments_vae_50_mutation_crossover)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_random, b=episodes_first_failure_local_search_segments_vae_50_mutation_crossover
    )
    print("*****************************************")

    print("=========== LOCAL SEARCH SEGMENTS 50 MUTATION CROSSOVER vs LOCAL SEARCH 50 REPLAY ===========")
    summary(a=episodes_first_failure_local_search_segments_vae_50_replay)
    summary(a=episodes_first_failure_local_search_segments_vae_50_mutation_crossover)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_local_search_segments_vae_50_replay,
        b=episodes_first_failure_local_search_segments_vae_50_mutation_crossover,
    )
    print("*****************************************")

    print("=========== LOCAL SEARCH SEGMENTS 50 MUTATION CROSSOVER vs MLP_1 30 SAMPLING SIZE 1000 OPTIMIZED ===========")
    summary(a=episodes_first_failure_local_search_segments_vae_50_mutation_crossover)
    summary(a=episodes_first_failure_mlp_1_30_sampling_size_1000_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_local_search_segments_vae_50_mutation_crossover,
        b=episodes_first_failure_mlp_1_30_sampling_size_1000_optimized,
    )
    print("*****************************************")

    print("=========== LOCAL SEARCH SEGMENTS 50 MUTATION CROSSOVER vs MLP_1 50 VAE SAMPLING SIZE 1000 OPTIMIZED ===========")
    summary(a=episodes_first_failure_local_search_segments_vae_50_mutation_crossover)
    summary(a=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_local_search_segments_vae_50_mutation_crossover,
        b=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized,
    )
    print("*****************************************")

    print("=========== LOCAL SEARCH SEGMENTS 50 MUTATION CROSSOVER vs PR 30 ===========")
    summary(a=episodes_first_failure_local_search_segments_vae_50_mutation_crossover)
    summary(a=episodes_first_failure_prioritized_replay_30)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_local_search_segments_vae_50_mutation_crossover,
        b=episodes_first_failure_prioritized_replay_30,
    )
    print("*****************************************")

    print("=========== RANDOM vs LOCAL SEARCH WHOLE 50 REPLAY ===========")
    summary(a=episodes_first_failure_random)
    summary(a=episodes_first_failure_local_search_whole_vae_50_replay)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_random, b=episodes_first_failure_local_search_whole_vae_50_replay)
    print("*****************************************")

    print("=========== RANDOM vs LOCAL SEARCH WHOLE 50 MUTATION CROSSOVER ===========")
    summary(a=episodes_first_failure_random)
    summary(a=episodes_first_failure_local_search_whole_vae_50_mutation_crossover)
    print("Episodes first failure (smaller is better)")
    statistical_tests(a=episodes_first_failure_random, b=episodes_first_failure_local_search_whole_vae_50_mutation_crossover)
    print("*****************************************")

    print("=========== LOCAL SEARCH WHOLE 50 MUTATION CROSSOVER vs LOCAL SEARCH WHOLE 50 REPLAY ===========")
    summary(a=episodes_first_failure_local_search_whole_vae_50_replay)
    summary(a=episodes_first_failure_local_search_whole_vae_50_mutation_crossover)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_local_search_whole_vae_50_replay,
        b=episodes_first_failure_local_search_whole_vae_50_mutation_crossover,
    )
    print("*****************************************")

    print("=========== LOCAL SEARCH WHOLE 50 REPLAY vs MLP_1 30 SAMPLING SIZE 1000 OPTIMIZED ===========")
    summary(a=episodes_first_failure_local_search_whole_vae_50_replay)
    summary(a=episodes_first_failure_mlp_1_30_sampling_size_1000_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_local_search_whole_vae_50_mutation_crossover,
        b=episodes_first_failure_mlp_1_30_sampling_size_1000_optimized,
    )
    print("*****************************************")

    print("=========== LOCAL SEARCH WHOLE 50 REPLAY vs MLP_1 50 VAE SAMPLING SIZE 1000 OPTIMIZED ===========")
    summary(a=episodes_first_failure_local_search_whole_vae_50_replay)
    summary(a=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_local_search_whole_vae_50_replay,
        b=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized,
    )
    print("*****************************************")

    print("=========== LOCAL SEARCH WHOLE 50 REPLAY vs PR 30 ===========")
    summary(a=episodes_first_failure_local_search_whole_vae_50_replay)
    summary(a=episodes_first_failure_prioritized_replay_30)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_local_search_whole_vae_50_replay, b=episodes_first_failure_prioritized_replay_30
    )
    print("*****************************************")

    print("=========== LOCAL SEARCH WHOLE 50 REPLAY vs LOCAL SEARCH SEGMENTS 50 MUTATION CROSSOVER ===========")
    summary(a=episodes_first_failure_local_search_whole_vae_50_replay)
    summary(a=episodes_first_failure_local_search_segments_vae_50_mutation_crossover)
    print("Episodes first failure (smaller is better)")
    statistical_tests(
        a=episodes_first_failure_local_search_whole_vae_50_replay,
        b=episodes_first_failure_local_search_segments_vae_50_mutation_crossover,
    )
    print("*****************************************")

    comparison(
        quantities_compared="Time elapsed",
        method_1=times_elapsed_prioritized_replay_50,
        method_2=times_elapsed_mlp_1_vae_50_sampling_size_1000_optimized,
        name_method_1="PR 50",
        name_method_2="MLP_1 50 VAE, 1000 optimized",
    )

    comparison(
        quantities_compared="Time elapsed",
        method_1=times_elapsed_prioritized_replay_50,
        method_2=times_elapsed_mlp_1_30_sampling_size_1000_optimized,
        name_method_1="PR 50",
        name_method_2="MLP_1 30, 1000 optimized",
    )

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_mlp_1_vae_50_sampling_size_1000_optimized,
        method_2=episodes_first_failure_mlp_1_vae_50_hill_climbing,
        name_method_1="MLP_1 50, vae, 1000 optimized",
        name_method_2="MLP_1 50, vae, hill climbing",
    )

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_mlp_1_30_sampling_size_1000_optimized,
        method_2=episodes_first_failure_mlp_1_30_hill_climbing,
        name_method_1="MLP_1 30, 1000 optimized",
        name_method_2="MLP_1 30, hill climbing",
    )

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_random,
        method_2=episodes_first_failure_mlp_1_30_hill_climbing,
        name_method_1="Random",
        name_method_2="MLP_1 30, hill climbing",
    )

    comparison(
        quantities_compared="Time elapsed",
        method_1=times_elapsed_mlp_1_30_sampling_size_1000_optimized,
        method_2=times_elapsed_mlp_1_30_hill_climbing,
        name_method_1="MLP_1 30, 1000 optimized",
        name_method_2="MLP_1 30, hill climbing",
    )

    # OTHER RUN
    episodes_first_failure_random = [
        14.0,
        12.0,
        13.0,
        61.0,
        10.0,
        13.0,
        5.0,
        22.0,
        10.0,
        66.0,
        18.0,
        17.0,
        5.0,
        46.0,
        59.0,
        31.0,
        100.0,
        100.0,
        6.0,
        69.0,
    ]
    episodes_first_failure_mlp_1_std_10_oversampling_0_3_sampling_size_20 = [
        38.0,
        38.0,
        27.0,
        5.0,
        16.0,
        16.0,
        5.0,
        92.0,
        14.0,
        72.0,
        6.0,
        62.0,
        8.0,
        33.0,
        13.0,
        26.0,
        2.0,
        15.0,
        9.0,
        17.0,
    ]
    episodes_first_failure_local_search_segments_std_10_mutation_crossover = [
        14.0,
        3.0,
        36.0,
        49.0,
        37.0,
        43.0,
        56.0,
        12.0,
        35.0,
        31.0,
        15.0,
        2.0,
        11.0,
        42.0,
        5.0,
        4.0,
        23.0,
        15.0,
        29.0,
        18.0,
    ]
    episodes_first_failure_local_search_segments_vae_10_mutation_crossover = [
        4.0,
        4.0,
        5.0,
        3.0,
        5.0,
        7.0,
        3.0,
        1.0,
        7.0,
        34.0,
        8.0,
        13.0,
        2.0,
        10.0,
        43.0,
        7.0,
        1.0,
        14.0,
        16.0,
        15.0,
    ]
    episodes_first_failure_mlp_1_10_oversampling_0_3_sampling_size_20 = [
        20.0,
        6.0,
        49.0,
        7.0,
        24.0,
        38.0,
        18.0,
        8.0,
        5.0,
        4.0,
        2.0,
        7.0,
        3.0,
        1.0,
        4.0,
        1.0,
        11.0,
        39.0,
        5.0,
        32.0,
    ]
    episodes_first_failure_mlp_1_vae_10_sampling_size_20 = [
        29.0,
        2.0,
        43.0,
        1.0,
        12.0,
        3.0,
        15.0,
        26.0,
        39.0,
        13.0,
        2.0,
        7.0,
        60.0,
        3.0,
        14.0,
        3.0,
        6.0,
        9.0,
        25.0,
        42.0,
    ]
    episodes_first_failure_prioritized_replay_10 = [
        3.0,
        3.0,
        48.0,
        23.0,
        7.0,
        4.0,
        6.0,
        11.0,
        15.0,
        19.0,
        1.0,
        6.0,
        12.0,
        6.0,
        2.0,
        4.0,
        15.0,
        10.0,
        4.0,
        2.0,
    ]

    print()
    print()
    print()

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_random,
        method_2=episodes_first_failure_mlp_1_std_10_oversampling_0_3_sampling_size_20,
        name_method_1="random",
        name_method_2="mlp_1, std, filter 10, oversampling 0.3, sampling 20",
    )

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_random,
        method_2=episodes_first_failure_local_search_segments_std_10_mutation_crossover,
        name_method_1="random",
        name_method_2="local search, std, filter 10",
    )

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_random,
        method_2=episodes_first_failure_mlp_1_10_oversampling_0_3_sampling_size_20,
        name_method_1="random",
        name_method_2="mlp_1, filter 10, oversampling 0.3, sampling 20",
    )

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_random,
        method_2=episodes_first_failure_mlp_1_vae_10_sampling_size_20,
        name_method_1="random",
        name_method_2="mlp_1, vae, filter 10, oversampling 0.3, sampling 20",
    )

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_random,
        method_2=episodes_first_failure_local_search_segments_vae_10_mutation_crossover,
        name_method_1="random",
        name_method_2="local search, vae, filter 10",
    )

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_random,
        method_2=episodes_first_failure_prioritized_replay_10,
        name_method_1="random",
        name_method_2="prioritized replay 10",
    )

    print()
    print()
    print()
    # DonkeyVAE-50, 52/2645 -> failure_tracks / non_failure_tracks
    episodes_first_failure_random = [
        100.0,
        100.0,
        96.0,
        100.0,
        100.0,
        16.0,
        100.0,
        100.0,
        55.0,
        45.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
    ]
    episodes_first_failure_mlp_1_filter_5_100 = [
        100.0,
        100.0,
        21.0,
        83.0,
        67.0,
        100.0,
        100.0,
        78.0,
        91.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        39.0,
        28.0,
        100.0,
        100.0,
        73.0,
        100.0,
    ]
    episodes_first_failure_mlp_1_filter_5_hill_climbing = [
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        33.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        51.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        15.0,
    ]
    # 202 -> vae_tracks, 400 reconstruction loss threshold, ? mean on training set
    episodes_first_failure_mlp_1_filter_5_hill_climbing_vae = [
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        15.0,
        100.0,
        100.0,
        42.0,
        100.0,
        21.0,
        100.0,
        100.0,
        100.0,
        14.0,
        100.0,
        96.0,
        100.0,
        100.0,
        100.0,
    ]
    # 122 -> std_failure_tracks, 0.45 std threshold, 0.31 mean on training set
    episodes_first_failure_mlp_1_filter_5_hill_climbing_std_failure = [
        100.0,
        100.0,
        69.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        75.0,
        33.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        100.0,
        59.0,
        19.0,
        100.0,
    ]
    episodes_first_failure_prioritized_replay_5 = [
        100.0,
        7.0,
        67.0,
        100.0,
        1.0,
        100.0,
        13.0,
        30.0,
        100.0,
        12.0,
        9.0,
        41.0,
        14.0,
        23.0,
        100.0,
        100.0,
        19.0,
        100.0,
        4.0,
        96.0,
    ]
    episodes_first_failure_prioritized_replay_10 = [
        20.0,
        5.0,
        28.0,
        100.0,
        100.0,
        11.0,
        2.0,
        100.0,
        100.0,
        8.0,
        100.0,
        100.0,
        3.0,
        20.0,
        11.0,
        100.0,
        29.0,
        100.0,
        3.0,
        100.0,
    ]
    episodes_first_failure_local_search_5 = [
        100.0,
        88.0,
        29.0,
        100.0,
        87.0,
        100.0,
        27.0,
        98.0,
        9.0,
        11.0,
        17.0,
        87.0,
        21.0,
        3.0,
        91.0,
        28.0,
        100.0,
        100.0,
        26.0,
        13.0,
    ]

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_random,
        method_2=episodes_first_failure_mlp_1_filter_5_100,
        name_method_1="random",
        name_method_2="mlp_1, 5, sampling",
    )

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_random,
        method_2=episodes_first_failure_mlp_1_filter_5_hill_climbing,
        name_method_1="random",
        name_method_2="mlp_1, 5, hill climbing",
    )

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_random,
        method_2=episodes_first_failure_mlp_1_filter_5_hill_climbing_vae,
        name_method_1="random",
        name_method_2="mlp_1, 5, hill climbing vae",
    )

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_random,
        method_2=episodes_first_failure_mlp_1_filter_5_hill_climbing_std_failure,
        name_method_1="random",
        name_method_2="mlp_1, 5, hill climbing std",
    )

    comparison(
        quantities_compared="Episodes first failure",
        method_1=episodes_first_failure_random,
        method_2=episodes_first_failure_prioritized_replay_5,
        name_method_1="random",
        name_method_2="pr, 5",
    )

    num_runs = 20
    failure_probs_random = [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ]
    failure_probs_prioritized_20 = [
        0.0,
        0.0,
        0.05,
        0.0,
        0.25,
        0.0,
        0.05,
        0.0,
        0.05,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.4,
        0.0,
        0.1,
        0.0,
        0.15,
        0.15,
        0.0,
        0.05,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.35,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.45,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.2,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.3,
        0.15,
        0.05,
        0.25,
        0.1,
        0.15,
        0.05,
        0.05,
        0.3,
        0.15,
        0.25,
        0.0,
        0.05,
        0.15,
        0.2,
        0.1,
        0.45,
        0.1,
        0.2,
        0.05,
        0.15,
        0.15,
        0.05,
        0.2,
        0.0,
        0.1,
        0.2,
        0.2,
        0.15,
        0.0,
        0.1,
        0.05,
        0.1,
        0.0,
        0.05,
        0.1,
        0.05,
        0.35,
        0.0,
    ]
    failure_probs_mlp_1_hill_climbing_threshold_0_8_augmented_features_10 = [
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.05,
        0.0,
        0.05,
        0.05,
        1.0,
        0.0,
        0.0,
        0.95,
        0.0,
        0.0,
        0.0,
        0.15,
        0.4,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.9,
        1.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.05,
        0.05,
        0.55,
        0.1,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        1.0,
        0.0,
        0.1,
        0.1,
        0.0,
        0.55,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.2,
        0.1,
        0.0,
        0.8,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.95,
        1.0,
        0.0,
        0.0,
        0.3,
        0.0,
        0.0,
        0.1,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.4,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
    ]
    failure_probs_hot_point_neighbor_size_4_20 = [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.55,
        0.0,
        0.0,
        0.1,
        0.0,
        0.15,
        0.05,
        0.0,
        0.0,
        0.05,
        0.0,
        0.05,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.15,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.15,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.25,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ]
    failure_probs_mlp_1_augmented_original_500_sampling_size = [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ]

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_random,
        method_2=failure_probs_prioritized_20,
        name_method_1="Random",
        name_method_2="PR 20",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_prioritized_20,
        method_2=failure_probs_hot_point_neighbor_size_4_20,
        name_method_1="PR 20",
        name_method_2="HP 4 size, 20",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_prioritized_20,
        method_2=failure_probs_mlp_1_hill_climbing_threshold_0_8_augmented_features_10,
        name_method_1="PR 20",
        name_method_2="MLP_1 augmented (features), hill climbing threshold 0.8, 10",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_hot_point_neighbor_size_4_20,
        method_2=failure_probs_mlp_1_hill_climbing_threshold_0_8_augmented_features_10,
        name_method_1="HP 4 size, 20",
        name_method_2="MLP_1 augmented (features), hill climbing threshold 0.8, 10",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_random,
        method_2=failure_probs_mlp_1_augmented_original_500_sampling_size,
        name_method_1="Random",
        name_method_2="MLP_1 augmented (features), original sampling 500 sampling size",
    )

    print()
    print()

    failure_probs_mlp_1_hp_hc_starting_failure_tracks = [
        0.55,
        0.0,
        0.15,
        0.7,
        0.05,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.05,
        0.15,
        0.05,
        0.15,
        0.9,
        0.4,
        0.8,
        0.1,
        0.0,
        0.0,
        0.1,
        0.15,
        0.0,
        0.3,
        0.35,
        0.05,
        0.05,
        0.1,
        0.1,
        0.0,
        0.05,
        0.0,
        0.05,
        0.45,
        0.05,
        0.05,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.05,
        0.2,
        0.0,
        0.0,
        0.05,
        0.0,
        0.05,
        0.05,
        0.1,
        0.05,
        0.1,
        0.0,
        0.05,
        0.0,
        0.0,
        0.05,
        0.05,
        0.15,
        0.2,
        0.05,
        0.0,
        0.0,
        0.0,
        0.2,
        0.15,
        0.55,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.1,
    ]
    failure_probs_mlp_1_hp_hc_aug_starting_failure_tracks = [
        0.85,
        0.2,
        0.3,
        0.25,
        0.0,
        0.05,
        0.25,
        0.05,
        0.4,
        0.55,
        0.2,
        0.05,
        0.0,
        0.05,
        0.05,
        0.0,
        0.05,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.35,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.05,
        0.1,
        0.35,
        0.0,
        0.05,
        0.45,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.6,
        0.0,
        0.0,
        0.25,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.2,
        0.1,
        0.6,
        0.85,
        0.15,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.25,
        0.2,
        0.0,
        0.0,
        0.05,
        0.05,
        0.0,
        0.15,
        0.85,
        0.0,
        0.05,
        0.0,
        0.05,
        0.35,
    ]
    failure_probs_mlp_1_hp_hc_reg_starting_failure_tracks = [
        0.0,
        0.0,
        0.75,
        0.2,
        0.1,
        0.05,
        0.05,
        0.05,
        0.0,
        0.0,
        0.0,
        0.15,
        0.05,
        0.25,
        0.0,
        0.2,
        0.8,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.05,
        0.0,
        0.05,
        0.3,
        0.05,
        0.05,
        0.4,
        0.0,
        0.05,
        0.15,
        0.1,
        0.25,
        0.0,
        0.0,
        0.0,
        0.05,
        0.15,
        0.0,
        0.0,
        0.05,
        0.1,
        0.35,
        0.3,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.15,
        0.05,
        0.15,
        0.3,
        0.15,
        0.85,
        0.05,
        0.05,
        0.05,
        0.0,
        0.1,
        0.0,
        0.15,
        0.0,
        0.0,
        0.0,
        0.05,
        0.45,
        0.25,
        0.0,
        0.0,
        0.1,
    ]

    failure_probs_mlp_1_1000 = [
        0.05,
        0.0,
        0.05,
        0.0,
        0.1,
        0.15,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.15,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.5,
        0.0,
    ]
    failure_probs_mlp_1_aug_1000 = [
        0.0,
        0.05,
        0.05,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
    ]
    failure_probs_mlp_1_reg_1000 = [
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.15,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ]

    failure_probs_prioritized_10 = [
        1.0,
        0.5,
        0.0,
        0.0,
        0.15,
        0.0,
        0.0,
        0.05,
        0.0,
        0.05,
        0.15,
        0.0,
        0.0,
        0.0,
        0.45,
        0.15,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.3,
        1.0,
        0.0,
        0.0,
        0.05,
        0.05,
        0.05,
        0.0,
        0.2,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.25,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.35,
        0.05,
        0.15,
        0.15,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.25,
        0.05,
        0.0,
        0.1,
        0.2,
        0.0,
        0.0,
        0.0,
        0.0,
        0.3,
        0.0,
        0.0,
        0.0,
        0.0,
        0.15,
        0.0,
        0.2,
        0.15,
        0.2,
        0.1,
        0.1,
        0.05,
        0.0,
        0.0,
        0.0,
        0.05,
        0.1,
        0.45,
    ]
    failure_probs_random = [
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.2,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.3,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.15,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ]

    failure_probs_mlp_1_hc_aug_0_5_10 = [
        0.1,
        0.0,
        0.0,
        0.05,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.15,
        0.1,
        0.0,
        0.15,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.15,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.4,
        0.0,
        0.05,
        0.0,
        0.1,
        0.0,
        0.15,
        0.5,
        0.35,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.25,
        0.2,
        0.0,
        0.0,
        0.0,
        0.55,
        0.0,
        0.15,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.25,
        0.0,
        0.15,
        0.0,
        0.0,
        0.2,
        0.0,
        0.55,
        0.0,
        0.0,
        0.05,
        0.05,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.2,
        0.1,
        0.0,
        0.1,
        0.0,
        0.05,
        0.0,
        0.05,
        0.0,
        0.0,
        0.1,
        0.65,
        0.0,
    ]
    failure_probs_mlp_1_hc_aug_0_65_10 = [
        0.0,
        0.2,
        0.15,
        0.1,
        0.2,
        0.15,
        0.0,
        0.2,
        0.0,
        0.35,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.45,
        0.25,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.45,
        0.25,
        0.0,
        0.15,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.15,
        0.15,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.05,
        0.1,
        0.0,
        0.05,
        0.05,
        0.3,
        0.0,
        0.0,
        0.25,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.15,
        0.0,
        0.0,
        0.05,
        0.05,
        0.0,
        0.05,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.2,
        0.2,
        0.0,
        0.0,
        0.0,
    ]

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_mlp_1_hp_hc_starting_failure_tracks,
        method_2=failure_probs_mlp_1_hp_hc_aug_starting_failure_tracks,
        name_method_1="HP HC failure tracks",
        name_method_2="HP HC aug failure tracks",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_mlp_1_hp_hc_starting_failure_tracks,
        method_2=failure_probs_mlp_1_hp_hc_reg_starting_failure_tracks,
        name_method_1="HP HC failure tracks",
        name_method_2="HP HC reg failure tracks",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_mlp_1_1000,
        method_2=failure_probs_mlp_1_aug_1000,
        name_method_1="Original 1000",
        name_method_2="Original 1000 aug",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_mlp_1_1000,
        method_2=failure_probs_mlp_1_reg_1000,
        name_method_1="Original 1000",
        name_method_2="Original 1000 reg",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_random,
        method_2=failure_probs_prioritized_10,
        name_method_1="Random",
        name_method_2="PR 10",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_random,
        method_2=failure_probs_mlp_1_hc_aug_0_5_10,
        name_method_1="Random",
        name_method_2="HC 0.5 threshold, 10 filter, augmentation",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_random,
        method_2=failure_probs_mlp_1_hc_aug_0_65_10,
        name_method_1="Random",
        name_method_2="HC 0.65 threshold, 10 filter, augmentation",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_mlp_1_hc_aug_0_5_10,
        method_2=failure_probs_mlp_1_hc_aug_0_65_10,
        name_method_1="HC 0.5 threshold, 10 filter, augmentation",
        name_method_2="HC 0.65 threshold, 10 filter, augmentation",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_mlp_1_hc_aug_0_5_10,
        method_2=failure_probs_prioritized_10,
        name_method_1="HC 0.5 threshold, 10 filter, augmentation",
        name_method_2="PR 10",
    )

    print()
    print()

    failure_rates_failure_tracks_original = [
        0.0,
        0.23333333333333334,
        0.13333333333333333,
        0.13333333333333333,
        0.06666666666666667,
        0.0,
        0.0,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.0,
        0.2,
        0.03333333333333333,
        0.03333333333333333,
        0.0,
        0.0,
        0.06666666666666667,
        0.03333333333333333,
        0.06666666666666667,
        0.0,
        0.23333333333333334,
        0.06666666666666667,
        0.7,
        0.3333333333333333,
        0.06666666666666667,
        0.2,
        0.06666666666666667,
        0.0,
        0.0,
        0.0,
        0.0,
        0.03333333333333333,
        0.1,
        0.06666666666666667,
        0.16666666666666666,
        0.4666666666666667,
        0.4,
        0.06666666666666667,
        0.0,
        0.7,
        0.3,
        0.0,
        0.03333333333333333,
        0.0,
        0.06666666666666667,
        0.0,
        0.06666666666666667,
        0.13333333333333333,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.03333333333333333,
        0.06666666666666667,
        0.0,
        0.06666666666666667,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.0,
        0.06666666666666667,
        0.0,
        0.0,
        0.0,
        0.03333333333333333,
        0.36666666666666664,
        0.13333333333333333,
        0.7,
        0.3,
        0.0,
        0.1,
        0.03333333333333333,
        0.0,
        0.03333333333333333,
        0.06666666666666667,
        0.0,
        0.03333333333333333,
        0.16666666666666666,
        0.06666666666666667,
        0.0,
        0.0,
        0.5666666666666667,
        0.3,
        0.03333333333333333,
        0.1,
        0.7333333333333333,
        0.3,
        0.0,
        0.03333333333333333,
        0.0,
        0.0,
        0.23333333333333334,
        0.13333333333333333,
        0.23333333333333334,
        0.8,
        0.3,
        0.0,
        0.1,
        0.03333333333333333,
        0.5333333333333333,
        0.2,
        0.13333333333333333,
        0.0,
        0.6,
        0.26666666666666666,
        0.0,
        0.03333333333333333,
        0.0,
    ]
    failure_rates_failure_tracks_improved_regressor = [
        0.0,
        0.03333333333333333,
        0.7333333333333333,
        1.0,
        0.3,
        0.1,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.7,
        1.0,
        0.3,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.1,
        0.13333333333333333,
        0.0,
        0.0,
        0.13333333333333333,
        0.0,
        0.7,
        0.3,
        0.5666666666666667,
        0.26666666666666666,
        0.03333333333333333,
        0.13333333333333333,
        0.3333333333333333,
        0.03333333333333333,
        0.0,
        0.0,
        0.03333333333333333,
        0.06666666666666667,
        0.03333333333333333,
        0.5,
        0.4,
        0.1,
        0.7,
        1.0,
        0.3,
        0.7,
        0.36666666666666664,
        0.0,
        0.0,
        0.0,
        0.7,
        0.3,
        0.7,
        0.3,
        0.7,
        0.3,
        0.03333333333333333,
        0.7333333333333333,
        0.3,
        0.7,
        0.3,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.03333333333333333,
        0.7333333333333333,
        0.3,
        0.0,
        0.0,
        0.0,
        0.7,
        1.0,
        0.3333333333333333,
        0.03333333333333333,
        0.0,
        0.1,
        0.0,
        0.0,
        0.1,
        0.03333333333333333,
        0.06666666666666667,
        0.0,
        0.03333333333333333,
        0.0,
        0.0,
        0.03333333333333333,
        0.0,
        0.0,
        0.16666666666666666,
        0.7666666666666667,
        0.3,
        0.7,
        0.4,
        0.8,
        0.36666666666666664,
        0.36666666666666664,
        0.2,
        0.03333333333333333,
        0.7,
        0.3,
        0.0,
        0.23333333333333334,
        0.03333333333333333,
        0.7,
        1.0,
        0.3333333333333333,
        0.0,
        0.5666666666666667,
        0.26666666666666666,
        0.7,
        0.3,
        0.0,
    ]
    failure_rates_failure_tracks_improved_original = [
        0.0,
        0.16666666666666666,
        0.7666666666666667,
        1.0,
        0.3,
        0.0,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.7,
        1.0,
        0.36666666666666664,
        0.0,
        0.0,
        0.0,
        0.7,
        0.4,
        0.5333333333333333,
        0.23333333333333334,
        0.7,
        0.36666666666666664,
        0.03333333333333333,
        0.7,
        0.5,
        0.4666666666666667,
        0.4,
        0.1,
        0.16666666666666666,
        0.06666666666666667,
        0.0,
        0.2,
        0.23333333333333334,
        0.1,
        0.0,
        0.0,
        0.0,
        0.06666666666666667,
        0.1,
        0.7,
        1.0,
        0.3,
        0.7,
        0.36666666666666664,
        0.13333333333333333,
        0.0,
        0.03333333333333333,
        0.7,
        0.4666666666666667,
        0.7333333333333333,
        0.4666666666666667,
        0.7,
        0.3,
        0.0,
        0.7,
        0.4666666666666667,
        0.7666666666666667,
        0.3,
        0.0,
        0.0,
        0.03333333333333333,
        0.0,
        0.06666666666666667,
        0.0,
        0.7,
        0.3,
        0.0,
        0.0,
        0.4666666666666667,
        0.8333333333333334,
        1.0,
        0.36666666666666664,
        0.03333333333333333,
        0.6,
        0.23333333333333334,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.06666666666666667,
        0.0,
        0.0,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.23333333333333334,
        0.8666666666666667,
        0.3,
        0.7,
        0.36666666666666664,
        0.7666666666666667,
        0.3333333333333333,
        0.36666666666666664,
        0.1,
        0.13333333333333333,
        0.7333333333333333,
        0.3,
        0.0,
        0.0,
        0.03333333333333333,
        0.7,
        1.0,
        0.4,
        0.03333333333333333,
        0.03333333333333333,
        0.13333333333333333,
        0.7,
        0.3,
        0.0,
    ]

    failure_rates_failure_tracks_improved_original_no_hot_point = [
        0.0,
        0.0,
        0.7,
        1.0,
        0.36666666666666664,
        0.16666666666666666,
        0.03333333333333333,
        0.0,
        0.03333333333333333,
        0.0,
        0.7,
        0.3,
        0.7333333333333333,
        1.0,
        0.3333333333333333,
        0.06666666666666667,
        0.7,
        0.3,
        0.7,
        0.4666666666666667,
        0.13333333333333333,
        0.0,
        0.7,
        1.0,
        0.3,
        0.03333333333333333,
        0.0,
        0.06666666666666667,
        0.7,
        0.3,
        0.0,
        0.0,
        0.06666666666666667,
        0.06666666666666667,
        0.03333333333333333,
        0.1,
        0.1,
        0.7666666666666667,
        0.3,
        0.7,
        1.0,
        0.3,
        0.7,
        0.3333333333333333,
        0.1,
        0.13333333333333333,
        0.03333333333333333,
        0.7,
        0.3,
        0.7,
        0.36666666666666664,
        0.06666666666666667,
        0.06666666666666667,
        0.0,
        0.7,
        1.0,
        0.3,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.7,
        0.3,
        0.7,
        1.0,
        0.3,
        0.03333333333333333,
        0.0,
        0.7,
        1.0,
        0.3,
        0.6666666666666666,
        0.7,
        0.9333333333333333,
        0.3,
        0.0,
        0.7,
        0.3,
        0.0,
        0.7,
        0.3,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.7333333333333333,
        0.3,
        0.03333333333333333,
        0.0,
        0.7,
        0.3,
        0.3,
        0.1,
        0.7,
        1.0,
        0.3333333333333333,
        0.03333333333333333,
        0.0,
        0.0,
        0.7,
        0.4,
        0.0,
        0.0,
        0.7,
        0.36666666666666664,
        0.7,
        0.4666666666666667,
        0.0,
    ]
    failure_rates_failure_tracks_improved_regressor_no_hot_point = [
        0.0,
        0.03333333333333333,
        0.0,
        0.7,
        0.3,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.03333333333333333,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.0,
        0.06666666666666667,
        0.03333333333333333,
        0.03333333333333333,
        0.03333333333333333,
        0.0,
        0.0,
        0.7,
        0.3,
        0.0,
        0.0,
        0.0,
        0.0,
        0.03333333333333333,
        0.0,
        0.1,
        0.8,
        0.3,
        0.16666666666666666,
        0.06666666666666667,
        0.06666666666666667,
        0.0,
        0.6666666666666666,
        0.3,
        0.06666666666666667,
        0.03333333333333333,
        0.1,
        0.03333333333333333,
        0.0,
        0.7,
        0.3,
        0.0,
        0.7,
        0.4,
        0.7,
        0.3,
        0.0,
        0.0,
        0.0,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.13333333333333333,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.03333333333333333,
        0.7,
        0.3333333333333333,
        0.0,
        0.7,
        0.3,
        0.0,
        0.0,
        0.03333333333333333,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.43333333333333335,
        0.26666666666666666,
        0.7,
        0.3,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.2,
        0.13333333333333333,
        0.03333333333333333,
        0.0,
        0.7,
        0.9666666666666667,
        0.3,
        0.0,
    ]
    failure_rates_failure_tracks_improved_original_augmented_no_hot_point = [
        0.03333333333333333,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.0,
        0.36666666666666664,
        0.2,
        0.0,
        0.0,
        0.03333333333333333,
        0.06666666666666667,
        0.06666666666666667,
        0.0,
        0.13333333333333333,
        0.23333333333333334,
        0.1,
        0.43333333333333335,
        0.26666666666666666,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.0,
        0.23333333333333334,
        0.16666666666666666,
        0.03333333333333333,
        0.0,
        0.03333333333333333,
        0.03333333333333333,
        0.0,
        0.03333333333333333,
        0.16666666666666666,
        0.13333333333333333,
        0.0,
        0.0,
        0.03333333333333333,
        0.7333333333333333,
        0.3,
        0.06666666666666667,
        0.0,
        0.0,
        0.7,
        0.3,
        0.1,
        0.26666666666666666,
        0.03333333333333333,
        0.1,
        0.06666666666666667,
        0.13333333333333333,
        0.23333333333333334,
        0.03333333333333333,
        0.3,
        0.1,
        0.06666666666666667,
        0.23333333333333334,
        0.06666666666666667,
        0.0,
        0.0,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.06666666666666667,
        0.06666666666666667,
        0.03333333333333333,
        0.03333333333333333,
        0.03333333333333333,
        0.03333333333333333,
        0.03333333333333333,
        0.2,
        0.5333333333333333,
        0.2,
        0.0,
        0.0,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.5666666666666667,
        0.26666666666666666,
        0.0,
        0.0,
        0.0,
        0.03333333333333333,
        0.03333333333333333,
        0.0,
        0.3,
        0.16666666666666666,
        0.0,
        0.13333333333333333,
        0.16666666666666666,
        0.13333333333333333,
        0.1,
        0.03333333333333333,
        0.0,
        0.1,
        0.3,
        0.03333333333333333,
        0.0,
        0.0,
        0.03333333333333333,
        0.0,
        0.0,
        0.0,
        0.23333333333333334,
        0.1,
    ]

    failure_probs_prioritized_10 = [
        1.0,
        0.5,
        0.0,
        0.0,
        0.15,
        0.0,
        0.0,
        0.05,
        0.0,
        0.05,
        0.15,
        0.0,
        0.0,
        0.0,
        0.45,
        0.15,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.3,
        1.0,
        0.0,
        0.0,
        0.05,
        0.05,
        0.05,
        0.0,
        0.2,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.25,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.35,
        0.05,
        0.15,
        0.15,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.25,
        0.05,
        0.0,
        0.1,
        0.2,
        0.0,
        0.0,
        0.0,
        0.0,
        0.3,
        0.0,
        0.0,
        0.0,
        0.0,
        0.15,
        0.0,
        0.2,
        0.15,
        0.2,
        0.1,
        0.1,
        0.05,
        0.0,
        0.0,
        0.0,
        0.05,
        0.1,
        0.45,
    ]
    failure_probs_random = [
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.2,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.3,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.1,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.15,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ]

    failure_probs_regressors_10_n_100 = [
        0.0,
        0.2,
        0.15,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.9,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.2,
        1.0,
        0.1,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.55,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ]
    failure_probs_regressors_10_n_500 = [
        0.05,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.2,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.05,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.2,
        0.2,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.25,
        0.05,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        1.0,
        0.0,
        0.0,
        0.0,
        0.0,
    ]

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_rates_failure_tracks_original,
        method_2=failure_rates_failure_tracks_improved_regressor,
        name_method_1="Failure rates failure tracks original",
        name_method_2="Failure rates failure tracks improved regressor",
        paired=True,
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_random,
        method_2=failure_probs_regressors_10_n_100,
        name_method_1="Failure probs random",
        name_method_2="Failure probs regressor 10, n = 100",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_random,
        method_2=failure_probs_regressors_10_n_500,
        name_method_1="Failure probs random",
        name_method_2="Failure probs regressor 10, n = 500",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_regressors_10_n_100,
        method_2=failure_probs_regressors_10_n_500,
        name_method_1="Failure probs regressor 10, n = 100",
        name_method_2="Failure probs regressor 10, n = 500",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_probs_prioritized_10,
        method_2=failure_probs_regressors_10_n_500,
        name_method_1="Failure probs PR 10",
        name_method_2="Failure probs regressor 10, n = 500",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_rates_failure_tracks_original,
        method_2=failure_rates_failure_tracks_improved_original_no_hot_point,
        name_method_1="Failure probs PR 10",
        name_method_2="Failure rates failure tracks improved original no hot point",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_rates_failure_tracks_original,
        method_2=failure_rates_failure_tracks_improved_regressor_no_hot_point,
        name_method_1="Failure probs PR 10",
        name_method_2="Failure rates failure tracks improved regressor no hot point",
    )

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_rates_failure_tracks_original,
        method_2=failure_rates_failure_tracks_improved_regressor_no_hot_point,
        name_method_1="Failure rates failure tracks original",
        name_method_2="Failure rates failure tracks improved original augmented no hot point",
    )

    # boxplot_dict = dict()
    #
    # boxplot_dict['random'] = failure_probs_random
    # boxplot_dict['pr'] = failure_probs_prioritized_10
    # boxplot_dict['regr_100'] = failure_probs_regressors_10_n_100
    # boxplot_dict['regr_500'] = failure_probs_regressors_10_n_500
    #
    # import matplotlib.pyplot as plt
    # plt.figure()
    # plt.ylim([0.0, 1.0])
    # plt.boxplot(x=boxplot_dict.values(), labels=boxplot_dict.keys())
    # plt.title('Failure Probabilities Comparison')
    # plt.show()

    comparison(
        quantities_compared="Failure probabilities 20 runs",
        method_1=failure_rates_failure_tracks_original,
        method_2=failure_rates_failure_tracks_improved_original,
        name_method_1="Failure rates failure tracks original",
        name_method_2="Failure rates failure tracks improved original",
    )

    failure_rates_failure_tracks_improved_regressor_prioritized = [
        0.7,
        1.0,
        0.7333333333333333,
        0.0,
        0.0,
        0.7333333333333333,
        0.0,
        0.7666666666666667,
        0.3333333333333333,
        0.03333333333333333,
        1.0,
        0.0,
        0.7,
        0.0,
        0.4,
        0.0,
        0.03333333333333333,
        0.0,
        0.1,
        0.7333333333333333,
    ]
    failure_rates_failure_tracks_improved_original_prioritized = [
        0.0,
        0.3,
        0.3,
        0.0,
        0.23333333333333334,
        0.03333333333333333,
        0.0,
        0.4666666666666667,
        0.4666666666666667,
        0.0,
        0.0,
        0.0,
        0.2,
        0.0,
        0.0,
        0.0,
        0.03333333333333333,
        0.0,
        0.4,
        0.0,
    ]
    failure_rates_failure_tracks_improved_original_augmented_prioritized = [
        0.0,
        0.3,
        0.3,
        0.6333333333333333,
        0.0,
        0.0,
        0.03333333333333333,
        0.0,
        0.03333333333333333,
        0.0,
        0.3,
        0.1,
        0.03333333333333333,
        0.3,
        0.06666666666666667,
        0.0,
        0.06666666666666667,
        0.3,
        0.0,
        0.0,
    ]

    comparison(
        quantities_compared="Failure probabilities 30 runs",
        method_1=failure_rates_failure_tracks_improved_regressor_prioritized,
        method_2=failure_rates_failure_tracks_improved_original_prioritized,
        name_method_1="Failure rates failure tracks improved regressor prioritized",
        name_method_2="Failure rates failure tracks improved original prioritized",
        paired=True,
    )

    comparison(
        quantities_compared="Failure probabilities 30 runs",
        method_1=failure_rates_failure_tracks_improved_regressor_prioritized,
        method_2=failure_rates_failure_tracks_improved_original_augmented_prioritized,
        name_method_1="Failure rates failure tracks improved regressor prioritized",
        name_method_2="Failure rates failure tracks improved original prioritized",
        paired=True,
    )
